É
^D:\Fontys\2025-2026\Semester 3.1\Individueel project\Eventary\Eventary-API\DAL\AppDbContext.cs
	namespace 	
DAL
 
{ 
public 

class 
AppDbContext 
: 
	DbContext  )
{ 
public 
AppDbContext 
( 
DbContextOptions ,
<, -
AppDbContext- 9
>9 :
options; B
)B C
:D E
baseF J
(J K
optionsK R
)R S
{		 	
}

 	
public 
DbSet 
< 
Employee 
> 
employee '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
DbSet 
< 
Item 
> 
item 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DbSet 
< 
Category 
> 
category '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
DbSet 
< 
Order 
> 
order !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DbSet 
< 
Company 
> 
company %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} â
qD:\Fontys\2025-2026\Semester 3.1\Individueel project\Eventary\Eventary-API\DAL\Repositories\CategoryRepository.cs
	namespace 	
DAL
 
. 
Repositories 
{ 
public 

class 
CategoryRepository #
:$ %
ICategoryRepository& 9
{ 
private		 
readonly		 
AppDbContext		 %
_context		& .
;		. /
public 
CategoryRepository !
(! "
AppDbContext" .
context/ 6
)6 7
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
CategoryDto& 1
>1 2
>2 3
GetAllAsync4 ?
(? @
)@ A
{ 	
var 

categories 
= 
await "
_context# +
.+ ,
category, 4
.4 5
ToListAsync5 @
(@ A
)A B
;B C
return 

categories 
. 
Select $
($ %
category% -
=>. 0
new1 4
CategoryDto5 @
{ 
Id 
= 
category 
. 
Id  
,  !
Name 
= 
category 
.  
Name  $
,$ %

Company_Id 
= 
category %
.% &

Company_Id& 0
} 
) 
; 
} 	
public 
async 
Task 
< 
CategoryDto %
?% &
>& '
GetByIdAsync( 4
(4 5
long5 9
id: <
)< =
{ 	
var 
category 
= 
await  
_context! )
.) *
category* 2
.2 3
	FindAsync3 <
(< =
id= ?
)? @
;@ A
if 
( 
category 
== 
null  
)  !
{ 
return   
null   
;   
}!! 
return## 
new## 
CategoryDto## "
{$$ 
Id%% 
=%% 
category%% 
.%% 
Id%%  
,%%  !
Name&& 
=&& 
category&& 
.&&  
Name&&  $
,&&$ %

Company_Id'' 
='' 
category'' %
.''% &

Company_Id''& 0
}(( 
;(( 
})) 	
}** 
}++ ­,
pD:\Fontys\2025-2026\Semester 3.1\Individueel project\Eventary\Eventary-API\DAL\Repositories\CompanyRepository.cs
	namespace 	
DAL
 
. 
Repositories 
{ 
public 

class 
CompanyRepository "
:# $
ICompanyRepository% 7
{		 
private

 
readonly

 
AppDbContext

 %
_context

& .
;

. /
public 
CompanyRepository  
(  !
AppDbContext! -
context. 5
)5 6
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &

CompanyDto& 0
>0 1
>1 2
GetAllAsync3 >
(> ?
)? @
{ 	
return 
await 
_context !
.! "
company" )
. 
Select 
( 
company 
=>  "
new# &

CompanyDto' 1
{ 
Id 
= 
company  
.  !
Id! #
,# $
Name 
= 
company "
." #
Name# '
} 
) 
. 
ToListAsync 
( 
) 
; 
} 	
public 
async 
Task 
< 

CompanyDto $
?$ %
>% &
GetByIdAsync' 3
(3 4
long4 8
id9 ;
); <
{ 	
var 
company 
= 
await 
_context  (
.( )
company) 0
.0 1
	FindAsync1 :
(: ;
id; =
)= >
;> ?
if 
( 
company 
== 
null 
)  
return! '
null( ,
;, -
return!! 
new!! 

CompanyDto!! !
{"" 
Id## 
=## 
company## 
.## 
Id## 
,##  
Name$$ 
=$$ 
company$$ 
.$$ 
Name$$ #
}%% 
;%% 
}&& 	
public(( 
async(( 
Task(( 
<(( 

CompanyDto(( $
>(($ %
AddCompanyAsync((& 5
(((5 6

CompanyDto((6 @

companyDto((A K
)((K L
{)) 	
var** 
company** 
=** 
new** 
Company** %
{++ 
Id,, 
=,, 

companyDto,, 
.,,  
Id,,  "
,,," #
Name-- 
=-- 

companyDto-- !
.--! "
Name--" &
}.. 
;.. 
_context00 
.00 
company00 
.00 
Add00  
(00  !
company00! (
)00( )
;00) *
await11 
_context11 
.11 
SaveChangesAsync11 +
(11+ ,
)11, -
;11- .
return33 
new33 

CompanyDto33 !
{44 
Id55 
=55 
company55 
.55 
Id55 
,55  
Name66 
=66 
company66 
.66 
Name66 #
}77 
;77 
}88 	
public;; 
async;; 
Task;; 
<;; 
bool;; 
>;; 
UpdateCompanyAsync;;  2
(;;2 3

CompanyDto;;3 =

companyDto;;> H
);;H I
{<< 	
var== 
company== 
=== 
await== 
_context==  (
.==( )
company==) 0
.==0 1
	FindAsync==1 :
(==: ;

companyDto==; E
.==E F
Id==F H
)==H I
;==I J
if>> 
(>> 
company>> 
==>> 
null>> 
)>>  
return>>! '
false>>( -
;>>- .
company@@ 
.@@ 
Name@@ 
=@@ 

companyDto@@ %
.@@% &
Name@@& *
;@@* +
_contextAA 
.AA 
companyAA 
.AA 
UpdateAA #
(AA# $
companyAA$ +
)AA+ ,
;AA, -
awaitBB 
_contextBB 
.BB 
SaveChangesAsyncBB +
(BB+ ,
)BB, -
;BB- .
returnDD 
trueDD 
;DD 
}EE 	
publicGG 
asyncGG 
TaskGG 
<GG 
boolGG 
>GG 
DeleteCompanyAsyncGG  2
(GG2 3
longGG3 7
idGG8 :
)GG: ;
{HH 	
varII 
companyII 
=II 
awaitII 
_contextII  (
.II( )
companyII) 0
.II0 1
	FindAsyncII1 :
(II: ;
idII; =
)II= >
;II> ?
ifJJ 
(JJ 
companyJJ 
==JJ 
nullJJ 
)JJ  
returnJJ! '
falseJJ( -
;JJ- .
_contextLL 
.LL 
companyLL 
.LL 
RemoveLL #
(LL# $
companyLL$ +
)LL+ ,
;LL, -
awaitMM 
_contextMM 
.MM 
SaveChangesAsyncMM +
(MM+ ,
)MM, -
;MM- .
returnOO 
trueOO 
;OO 
}QQ 	
}RR 
}SS ñI
qD:\Fontys\2025-2026\Semester 3.1\Individueel project\Eventary\Eventary-API\DAL\Repositories\EmployeeRepository.cs
	namespace 	
DAL
 
. 
Repositories 
{ 
public 

class 
EmployeeRepository #
:$ %
IEmployeeRepository& 9
{		 
private

 
readonly

 
AppDbContext

 %
_context

& .
;

. /
public 
EmployeeRepository !
(! "
AppDbContext" .
context/ 6
)6 7
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
EmployeeDto& 1
>1 2
>2 3
GetAllAsync4 ?
(? @
)@ A
{ 	
var 
	employees 
= 
await !
_context" *
.* +
employee+ 3
.3 4
ToListAsync4 ?
(? @
)@ A
;A B
return 
	employees 
. 
Select #
(# $
employee$ ,
=>- /
new0 3
EmployeeDto4 ?
{ 
Id 
= 
employee 
. 
Id  
,  !
Name 
= 
employee 
.  
Name  $
,$ %
Email 
= 
employee  
.  !
Email! &
,& '
Password 
= 
employee #
.# $
Password$ ,
,, -
IsAdmin 
= 
employee "
." #
IsAdmin# *
,* +
StoragePermission !
=" #
employee$ ,
., -
StoragePermission- >
,> ?
OrderPermission 
=  !
employee" *
.* +
OrderPermission+ :
,: ;
EmployeePermission "
=# $
employee% -
.- .
EmployeePermission. @
,@ A

Company_Id 
= 
employee %
.% &

Company_Id& 0
} 
) 
; 
}   	
public## 
async## 
Task## 
<## 
EmployeeDto## %
?##% &
>##& '
GetByIdAsync##( 4
(##4 5
long##5 9
id##: <
)##< =
{$$ 	
var%% 
employee%% 
=%% 
await%%  
_context%%! )
.%%) *
employee%%* 2
.%%2 3
	FindAsync%%3 <
(%%< =
id%%= ?
)%%? @
;%%@ A
if&& 
(&& 
employee&& 
==&& 
null&&  
)&&  !
{'' 
return(( 
null(( 
;(( 
})) 
return++ 
new++ 
EmployeeDto++ "
{,, 
Id-- 
=-- 
employee-- 
.-- 
Id--  
,--  !
Name.. 
=.. 
employee.. 
...  
Name..  $
,..$ %
Email// 
=// 
employee//  
.//  !
Email//! &
,//& '
Password00 
=00 
employee00 #
.00# $
Password00$ ,
,00, -
IsAdmin11 
=11 
employee11 "
.11" #
IsAdmin11# *
,11* +
StoragePermission22 !
=22" #
employee22$ ,
.22, -
StoragePermission22- >
,22> ?
OrderPermission33 
=33  !
employee33" *
.33* +
OrderPermission33+ :
,33: ;
EmployeePermission44 "
=44# $
employee44% -
.44- .
EmployeePermission44. @
,44@ A

Company_Id55 
=55 
employee55 %
.55% &

Company_Id55& 0
}66 
;66 
}77 	
public99 
async99 
Task99 
AddEmployeeAsync99 *
(99* +
EmployeeDto99+ 6
employeeDto997 B
)99B C
{:: 	
var;; 
employee;; 
=;; 
new;; 
Employee;; '
{<< 
Id== 
=== 
employeeDto==  
.==  !
Id==! #
,==# $
Name>> 
=>> 
employeeDto>> "
.>>" #
Name>># '
,>>' (
Email?? 
=?? 
employeeDto?? #
.??# $
Email??$ )
,??) *
Password@@ 
=@@ 
employeeDto@@ &
.@@& '
Password@@' /
,@@/ 0
IsAdminAA 
=AA 
employeeDtoAA %
.AA% &
IsAdminAA& -
,AA- .
StoragePermissionBB !
=BB" #
employeeDtoBB$ /
.BB/ 0
StoragePermissionBB0 A
,BBA B
OrderPermissionCC 
=CC  !
employeeDtoCC" -
.CC- .
OrderPermissionCC. =
,CC= >
EmployeePermissionDD "
=DD# $
employeeDtoDD% 0
.DD0 1
EmployeePermissionDD1 C
,DDC D

Company_IdEE 
=EE 
employeeDtoEE (
.EE( )

Company_IdEE) 3
}FF 
;FF 
awaitHH 
_contextHH 
.HH 
employeeHH #
.HH# $
AddAsyncHH$ ,
(HH, -
employeeHH- 5
)HH5 6
;HH6 7
awaitII 
_contextII 
.II 
SaveChangesAsyncII +
(II+ ,
)II, -
;II- .
}JJ 	
publicMM 
asyncMM 
TaskMM 
UpdateEmployeeAsyncMM -
(MM- .
EmployeeDtoMM. 9
employeeDtoMM: E
)MME F
{NN 	
varOO 
existingEmployeeOO  
=OO! "
awaitOO# (
_contextOO) 1
.OO1 2
employeeOO2 :
.OO: ;
	FindAsyncOO; D
(OOD E
employeeDtoOOE P
.OOP Q
IdOOQ S
)OOS T
;OOT U
ifPP 
(PP 
existingEmployeePP  
==PP! #
nullPP$ (
)PP( )
{QQ 
throwRR 
newRR  
KeyNotFoundExceptionRR .
(RR. /
$"RR/ 1
$strRR1 C
{RRC D
employeeDtoRRD O
.RRO P
IdRRP R
}RRR S
$strRRS b
"RRb c
)RRc d
;RRd e
}SS 
existingEmployeeUU 
.UU 
NameUU !
=UU" #
employeeDtoUU$ /
.UU/ 0
NameUU0 4
;UU4 5
existingEmployeeVV 
.VV 
EmailVV "
=VV# $
employeeDtoVV% 0
.VV0 1
EmailVV1 6
;VV6 7
existingEmployeeWW 
.WW 
PasswordWW %
=WW& '
employeeDtoWW( 3
.WW3 4
PasswordWW4 <
;WW< =
existingEmployeeXX 
.XX 
IsAdminXX $
=XX% &
employeeDtoXX' 2
.XX2 3
IsAdminXX3 :
;XX: ;
existingEmployeeYY 
.YY 
StoragePermissionYY .
=YY/ 0
employeeDtoYY1 <
.YY< =
StoragePermissionYY= N
;YYN O
existingEmployeeZZ 
.ZZ 
OrderPermissionZZ ,
=ZZ- .
employeeDtoZZ/ :
.ZZ: ;
OrderPermissionZZ; J
;ZZJ K
existingEmployee[[ 
.[[ 
EmployeePermission[[ /
=[[0 1
employeeDto[[2 =
.[[= >
EmployeePermission[[> P
;[[P Q
existingEmployee\\ 
.\\ 

Company_Id\\ '
=\\( )
employeeDto\\* 5
.\\5 6

Company_Id\\6 @
;\\@ A
_context^^ 
.^^ 
employee^^ 
.^^ 
Update^^ $
(^^$ %
existingEmployee^^% 5
)^^5 6
;^^6 7
await__ 
_context__ 
.__ 
SaveChangesAsync__ +
(__+ ,
)__, -
;__- .
}`` 	
publicbb 
asyncbb 
Taskbb 
DeleteEmployeeAsyncbb -
(bb- .
longbb. 2
idbb3 5
)bb5 6
{cc 	
vardd 
employeedd 
=dd 
awaitdd  
_contextdd! )
.dd) *
employeedd* 2
.dd2 3
	FindAsyncdd3 <
(dd< =
iddd= ?
)dd? @
;dd@ A
ifee 
(ee 
employeeee 
==ee 
nullee  
)ee  !
{ff 
throwgg 
newgg  
KeyNotFoundExceptiongg .
(gg. /
$"gg/ 1
$strgg1 C
{ggC D
idggD F
}ggF G
$strggG V
"ggV W
)ggW X
;ggX Y
}hh 
_contextjj 
.jj 
employeejj 
.jj 
Removejj $
(jj$ %
employeejj% -
)jj- .
;jj. /
awaitkk 
_contextkk 
.kk 
SaveChangesAsynckk +
(kk+ ,
)kk, -
;kk- .
}ll 	
}mm 
}nn ñN
mD:\Fontys\2025-2026\Semester 3.1\Individueel project\Eventary\Eventary-API\DAL\Repositories\ItemRepository.cs
	namespace

 	
CORE


 
.

 
Repositories

 
{ 
public 

class 
ItemRepository 
:  !
IItemRepository" 1
{ 
private 
readonly 
AppDbContext %
_context& .
;. /
public 
ItemRepository 
( 
AppDbContext *
context+ 2
)2 3
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
ItemDto& -
>- .
>. /
GetAllAsync0 ;
(; <
)< =
{ 	
return 
await 
_context !
.! "
item" &
. 
Select 
( 
item 
=> 
new  #
ItemDto$ +
{ 
Id 
= 
item 
. 
Id  
,  !
Name 
= 
item 
.  
Name  $
,$ %
Price 
= 
item  
.  !
Price! &
,& '
Quantity 
= 
item #
.# $
Quantity$ ,
,, -
ImageUrl 
= 
item #
.# $
ImageUrl$ ,
,, -
Category_Id 
=  !
item" &
.& '
Category_Id' 2
,2 3

Company_Id   
=    
item  ! %
.  % &

Company_Id  & 0
}!! 
)!! 
."" 
ToListAsync"" 
("" 
)"" 
;"" 
}## 	
public%% 
async%% 
Task%% 
<%% 
ItemDto%% !
?%%! "
>%%" #
GetByIdAsync%%$ 0
(%%0 1
long%%1 5
id%%6 8
)%%8 9
{&& 	
var'' 
item'' 
='' 
await'' 
_context'' %
.''% &
item''& *
.''* +
	FindAsync''+ 4
(''4 5
id''5 7
)''7 8
;''8 9
if(( 
((( 
item(( 
==(( 
null(( 
)(( 
return(( $
null((% )
;(() *
return** 
new** 
ItemDto** 
{++ 
Id,, 
=,, 
item,, 
.,, 
Id,, 
,,, 
Name-- 
=-- 
item-- 
.-- 
Name--  
,--  !
Price.. 
=.. 
item.. 
... 
Price.. "
,.." #
Quantity// 
=// 
item// 
.//  
Quantity//  (
,//( )
ImageUrl00 
=00 
item00 
.00  
ImageUrl00  (
,00( )
Category_Id11 
=11 
item11 "
.11" #
Category_Id11# .
,11. /

Company_Id22 
=22 
item22 !
.22! "

Company_Id22" ,
}33 
;33 
}44 	
public77 
async77 
Task77 
<77 
ItemDto77 !
>77! "
AddItemAsync77# /
(77/ 0
ItemDto770 7
itemDto778 ?
)77? @
{88 	
var99 
item99 
=99 
new99 
Item99 
{:: 
Id;; 
=;; 
itemDto;; 
.;; 
Id;; 
,;;  
Name<< 
=<< 
itemDto<< 
.<< 
Name<< #
,<<# $
Price== 
=== 
itemDto== 
.==  
Price==  %
,==% &
Quantity>> 
=>> 
itemDto>> "
.>>" #
Quantity>># +
,>>+ ,
ImageUrl?? 
=?? 
itemDto?? "
.??" #
ImageUrl??# +
,??+ ,
Category_Id@@ 
=@@ 
itemDto@@ %
.@@% &
Category_Id@@& 1
,@@1 2

Company_IdAA 
=AA 
itemDtoAA $
.AA$ %

Company_IdAA% /
}BB 
;BB 
varDD 
	addedItemDD 
=DD 
awaitDD !
_contextDD" *
.DD* +
itemDD+ /
.DD/ 0
AddAsyncDD0 8
(DD8 9
itemDD9 =
)DD= >
;DD> ?
awaitEE 
_contextEE 
.EE 
SaveChangesAsyncEE +
(EE+ ,
)EE, -
;EE- .
returnGG 
newGG 
ItemDtoGG 
{HH 
IdII 
=II 
	addedItemII 
.II 
EntityII %
.II% &
IdII& (
,II( )
NameJJ 
=JJ 
	addedItemJJ  
.JJ  !
EntityJJ! '
.JJ' (
NameJJ( ,
,JJ, -
PriceKK 
=KK 
	addedItemKK !
.KK! "
EntityKK" (
.KK( )
PriceKK) .
,KK. /
QuantityLL 
=LL 
	addedItemLL $
.LL$ %
EntityLL% +
.LL+ ,
QuantityLL, 4
,LL4 5
ImageUrlMM 
=MM 
	addedItemMM $
.MM$ %
EntityMM% +
.MM+ ,
ImageUrlMM, 4
,MM4 5
Category_IdNN 
=NN 
	addedItemNN '
.NN' (
EntityNN( .
.NN. /
Category_IdNN/ :
,NN: ;

Company_IdOO 
=OO 
	addedItemOO &
.OO& '
EntityOO' -
.OO- .

Company_IdOO. 8
}PP 
;PP 
}QQ 	
publicTT 
asyncTT 
TaskTT 
UpdateItemAsyncTT )
(TT) *
ItemDtoTT* 1
itemDtoTT2 9
)TT9 :
{UU 	
varVV 
itemVV 
=VV 
awaitVV 
_contextVV %
.VV% &
itemVV& *
.VV* +
	FindAsyncVV+ 4
(VV4 5
itemDtoVV5 <
.VV< =
IdVV= ?
)VV? @
;VV@ A
ifWW 
(WW 
itemWW 
==WW 
nullWW 
)WW 
returnWW $
;WW$ %
itemYY 
.YY 
NameYY 
=YY 
itemDtoYY 
.YY  
NameYY  $
;YY$ %
itemZZ 
.ZZ 
PriceZZ 
=ZZ 
itemDtoZZ  
.ZZ  !
PriceZZ! &
;ZZ& '
item[[ 
.[[ 
Quantity[[ 
=[[ 
itemDto[[ #
.[[# $
Quantity[[$ ,
;[[, -
item\\ 
.\\ 
ImageUrl\\ 
=\\ 
itemDto\\ #
.\\# $
ImageUrl\\$ ,
;\\, -
item]] 
.]] 
Category_Id]] 
=]] 
itemDto]] &
.]]& '
Category_Id]]' 2
;]]2 3
item^^ 
.^^ 

Company_Id^^ 
=^^ 
itemDto^^ %
.^^% &

Company_Id^^& 0
;^^0 1
_context`` 
.`` 
item`` 
.`` 
Update``  
(``  !
item``! %
)``% &
;``& '
awaitaa 
_contextaa 
.aa 
SaveChangesAsyncaa +
(aa+ ,
)aa, -
;aa- .
}bb 	
publicdd 
asyncdd 
Taskdd 
DeleteItemAsyncdd )
(dd) *
longdd* .
iddd/ 1
)dd1 2
{ee 	
varff 
itemff 
=ff 
awaitff 
_contextff %
.ff% &
itemff& *
.ff* +
	FindAsyncff+ 4
(ff4 5
idff5 7
)ff7 8
;ff8 9
ifgg 
(gg 
itemgg 
==gg 
nullgg 
)gg 
returngg $
;gg$ %
_contextii 
.ii 
itemii 
.ii 
Removeii  
(ii  !
itemii! %
)ii% &
;ii& '
awaitjj 
_contextjj 
.jj 
SaveChangesAsyncjj +
(jj+ ,
)jj, -
;jj- .
}kk 	
publicmm 
asyncmm 
Taskmm 
<mm 
ItemDtomm !
?mm! "
>mm" #
GetByNameAsyncmm$ 2
(mm2 3
stringmm3 9
namemm: >
)mm> ?
{nn 	
varoo 
itemoo 
=oo 
awaitoo 
_contextoo %
.oo% &
itemoo& *
.oo* +
FirstOrDefaultAsyncoo+ >
(oo> ?
ioo? @
=>ooA C
iooD E
.ooE F
NameooF J
==ooK M
nameooN R
)ooR S
;ooS T
ifpp 
(pp 
itempp 
==pp 
nullpp 
)pp 
returnpp $
nullpp% )
;pp) *
returnrr 
newrr 
ItemDtorr 
{ss 
Idtt 
=tt 
itemtt 
.tt 
Idtt 
,tt 
Nameuu 
=uu 
itemuu 
.uu 
Nameuu  
,uu  !
Pricevv 
=vv 
itemvv 
.vv 
Pricevv "
,vv" #
Quantityww 
=ww 
itemww 
.ww  
Quantityww  (
,ww( )
ImageUrlxx 
=xx 
itemxx 
.xx  
ImageUrlxx  (
,xx( )
Category_Idyy 
=yy 
itemyy "
.yy" #
Category_Idyy# .
,yy. /

Company_Idzz 
=zz 
itemzz !
.zz! "

Company_Idzz" ,
}{{ 
;{{ 
}|| 	
}}} 
}~~ ÍD
nD:\Fontys\2025-2026\Semester 3.1\Individueel project\Eventary\Eventary-API\DAL\Repositories\OrderRepository.cs
	namespace 	
DAL
 
. 
Repositories 
{ 
public 

class 
OrderRepository  
:! "
IOrderRepository# 3
{		 
private

 
readonly

 
AppDbContext

 %
_context

& .
;

. /
public 
OrderRepository 
( 
AppDbContext +
context, 3
)3 4
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
OrderDto& .
>. /
>/ 0
GetAllAsync1 <
(< =
)= >
{ 	
var 
orders 
= 
await 
_context '
.' (
order( -
.- .
ToListAsync. 9
(9 :
): ;
;; <
return 
orders 
. 
Select  
(  !
order! &
=>' )
new* -
OrderDto. 6
{ 
Id 
= 
order 
. 
Id 
, 
Name 
= 
order 
. 
Name !
,! "
Address 
= 
order 
.  
Address  '
,' (
Email 
= 
order 
. 
Email #
,# $
Phone 
= 
order 
. 
Phone #
,# $
	StartDate 
= 
order !
.! "
	StartDate" +
,+ ,
EndDate 
= 
order 
.  
EndDate  '
,' (
Status 
= 
order 
. 
Status %
,% &
Note 
= 
order 
. 
Note !
,! "

company_Id 
= 
order "
." #

company_Id# -
}   
)   
;   
}!! 	
public## 
async## 
Task## 
<## 
OrderDto## "
?##" #
>### $
GetByIdAsync##% 1
(##1 2
long##2 6
id##7 9
)##9 :
{$$ 	
var%% 
order%% 
=%% 
await%% 
_context%% &
.%%& '
order%%' ,
.%%, -
	FindAsync%%- 6
(%%6 7
id%%7 9
)%%9 :
;%%: ;
if&& 
(&& 
order&& 
==&& 
null&& 
)&& 
{'' 
return(( 
null(( 
;(( 
})) 
return++ 
new++ 
OrderDto++ 
{,, 
Id-- 
=-- 
order-- 
.-- 
Id-- 
,-- 
Name.. 
=.. 
order.. 
... 
Name.. !
,..! "
Address// 
=// 
order// 
.//  
Address//  '
,//' (
Email00 
=00 
order00 
.00 
Email00 #
,00# $
Phone11 
=11 
order11 
.11 
Phone11 #
,11# $
	StartDate22 
=22 
order22 !
.22! "
	StartDate22" +
,22+ ,
EndDate33 
=33 
order33 
.33  
EndDate33  '
,33' (
Status44 
=44 
order44 
.44 
Status44 %
,44% &
Note55 
=55 
order55 
.55 
Note55 !
,55! "

company_Id66 
=66 
order66 "
.66" #

company_Id66# -
}77 
;77 
}88 	
public:: 
async:: 
Task:: 
AddOrderAsync:: '
(::' (
OrderDto::( 0
orderDto::1 9
)::9 :
{;; 	
var<< 
order<< 
=<< 
new<< 
Order<< !
{== 
Id>> 
=>> 
orderDto>> 
.>> 
Id>>  
,>>  !
Name?? 
=?? 
orderDto?? 
.??  
Name??  $
,??$ %
Address@@ 
=@@ 
orderDto@@ "
.@@" #
Address@@# *
,@@* +
EmailAA 
=AA 
orderDtoAA  
.AA  !
EmailAA! &
,AA& '
PhoneBB 
=BB 
orderDtoBB  
.BB  !
PhoneBB! &
,BB& '
	StartDateCC 
=CC 
orderDtoCC $
.CC$ %
	StartDateCC% .
,CC. /
EndDateDD 
=DD 
orderDtoDD "
.DD" #
EndDateDD# *
,DD* +
StatusEE 
=EE 
orderDtoEE !
.EE! "
StatusEE" (
,EE( )
NoteFF 
=FF 
orderDtoFF 
.FF  
NoteFF  $
,FF$ %

company_IdGG 
=GG 
orderDtoGG %
.GG% &

company_IdGG& 0
}HH 
;HH 
awaitJJ 
_contextJJ 
.JJ 
orderJJ  
.JJ  !
AddAsyncJJ! )
(JJ) *
orderJJ* /
)JJ/ 0
;JJ0 1
awaitKK 
_contextKK 
.KK 
SaveChangesAsyncKK +
(KK+ ,
)KK, -
;KK- .
}LL 	
publicNN 
asyncNN 
TaskNN 
UpdateOrderAsyncNN *
(NN* +
OrderDtoNN+ 3
orderDtoNN4 <
)NN< =
{OO 	
varPP 
orderPP 
=PP 
awaitPP 
_contextPP &
.PP& '
orderPP' ,
.PP, -
	FindAsyncPP- 6
(PP6 7
orderDtoPP7 ?
.PP? @
IdPP@ B
)PPB C
;PPC D
ifQQ 
(QQ 
orderQQ 
==QQ 
nullQQ 
)QQ 
{RR 
throwSS 
newSS 
ArgumentExceptionSS +
(SS+ ,
$strSS, =
)SS= >
;SS> ?
}TT 
orderVV 
.VV 
NameVV 
=VV 
orderDtoVV !
.VV! "
NameVV" &
;VV& '
orderWW 
.WW 
AddressWW 
=WW 
orderDtoWW $
.WW$ %
AddressWW% ,
;WW, -
orderXX 
.XX 
EmailXX 
=XX 
orderDtoXX "
.XX" #
EmailXX# (
;XX( )
orderYY 
.YY 
PhoneYY 
=YY 
orderDtoYY "
.YY" #
PhoneYY# (
;YY( )
orderZZ 
.ZZ 
	StartDateZZ 
=ZZ 
orderDtoZZ &
.ZZ& '
	StartDateZZ' 0
;ZZ0 1
order[[ 
.[[ 
EndDate[[ 
=[[ 
orderDto[[ $
.[[$ %
EndDate[[% ,
;[[, -
order\\ 
.\\ 
Status\\ 
=\\ 
orderDto\\ #
.\\# $
Status\\$ *
;\\* +
order]] 
.]] 
Note]] 
=]] 
orderDto]] !
.]]! "
Note]]" &
;]]& '
await__ 
_context__ 
.__ 
SaveChangesAsync__ +
(__+ ,
)__, -
;__- .
}`` 	
publicbb 
asyncbb 
Taskbb 
DeleteOrderAsyncbb *
(bb* +
longbb+ /
idbb0 2
)bb2 3
{cc 	
vardd 
orderdd 
=dd 
awaitdd 
_contextdd &
.dd& '
orderdd' ,
.dd, -
	FindAsyncdd- 6
(dd6 7
iddd7 9
)dd9 :
;dd: ;
ifee 
(ee 
orderee 
==ee 
nullee 
)ee 
{ff 
throwgg 
newgg 
ArgumentExceptiongg +
(gg+ ,
$strgg, =
)gg= >
;gg> ?
}hh 
_contextjj 
.jj 
orderjj 
.jj 
Removejj !
(jj! "
orderjj" '
)jj' (
;jj( )
awaitkk 
_contextkk 
.kk 
SaveChangesAsynckk +
(kk+ ,
)kk, -
;kk- .
}ll 	
}mm 
}nn 