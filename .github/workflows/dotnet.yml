name: .NET CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-docker:
    runs-on: self-hosted

    defaults:
      run:
        working-directory: 'D:/Fontys/2025-2026/Semester 3.1/Individueel project/Eventary/Eventary-API'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore Eventary-API.sln

      - name: Lint Check
        run: |
          dotnet format style Eventary-API.sln --verify-no-changes
          dotnet format analyzers Eventary-API.sln --verify-no-changes
        env:
          DOTNET_NOLOGO: 1

      - name: Start SonarQube analysis
        run: dotnet sonarscanner begin /k:"Eventary-API" /d:sonar.host.url="http://localhost:9000" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build solution
        run: dotnet build Eventary-API.sln --no-restore --configuration Debug

      - name: End SonarQube analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Run unit tests
        run: dotnet test Unittest/Unittest.csproj --no-build --configuration Debug --verbosity normal

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/eventary-api:v1 .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/eventary-api:v1
          docker tag ${{ secrets.DOCKER_USERNAME }}/eventary-api:v1 ${{ secrets.DOCKER_USERNAME }}/eventary-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/eventary-api:latest
